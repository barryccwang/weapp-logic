<config>
{
  "enablePullDownRefresh": true,
  "onReachBottomDistance": 192,
  "usingComponents": {
    "hn-item": "/components/item.mina",
    "spinner": "/components/spinner.mina"
  }
}
</config>

<template>
  <view class="view {{ isReloading ? 'is-reloading' : ''}}">
    <view class="header">
      <view class="link {{ channel === 'top' ? 'active' : '' }}" data-channel="top" bindtap="tapType">Top</view>
      <view class="link {{ channel === 'new' ? 'active' : '' }}" data-channel="new" bindtap="tapType">New</view>
      <view class="link {{ channel === 'show' ? 'active' : '' }}" data-channel="show" bindtap="tapType">Show</view>
      <view class="link {{ channel === 'ask' ? 'active' : '' }}" data-channel="ask" bindtap="tapType">Ask</view>
      <view class="link {{ channel === 'job' ? 'active' : '' }}" data-channel="job" bindtap="tapType">Jobs</view>
      <view wx:if="{{ ads.menu.visible }}" class="link ad">
        <button plain="true" open-type="contact" session-from="{{ ads.menu.message }}">
          <image wx:if="{{ ads.menu.thumbnail }}" src="{{ ads.menu.thumbnail }}" />
          <image wx:else src="../assets/github-r.png" />
        </button>
      </view>
    </view>
    <view class="news-list">
      <hn-item wx:for="{{ items }}" wx:for-item="item" wx:key="id" class="item" item="{{ item }}" data-item="{{ item }}" bindtaptitle="tapItemTitle" bindtapby="tapItemBy" bindtapcomments="tapItemComments" />
      <view wx:if="{{ hasMore }}" class="more">
        <view wx:if="{{ isLoadingMore || isReloading }}"><spinner /></view>
        <view wx:else bindtap="tapMore">LOAD MORE</view>
      </view>
    </view>
  </view>
</template>

<script>
import { Page } from '@tinajs/tina'
import { tinax } from '../store'
import { host, timeAgo } from '../utils/filters'

Page.define(({
  mixins: [
    tinax.connect({
      state (state) {
        return {
          channel: state.lists.activeChannel,
        }
      },
      getters (getters) {
        return {
          items: getters.activeItems(),
          hasMore: getters.hasMoreItemsOfActiveChannel(),
          ads: getters.ads(),
        }
      },
      actions (actions) {
        return {
          fetchListData: actions.fetchListData,
          fetchNextPage: actions.fetchNextPage,
          fetchConfig: actions.fetchConfig,
        }
      },
    })
  ],
  data: {
    isReloading: false,
    isLoadingMore: false,
  },

  compute (state) {
    return {
      items: (state.items || []).map((item) => {
        return {
          ...item,
          host: host(item.url || ''),
          timeAgo: timeAgo(item.time),
        }
      }),
    }
  },

  onLoad () {
    wx.startPullDownRefresh()
    this.fetchConfig()
  },

  async onPullDownRefresh () {
    await this.reload({ channel: this.data.channel })
    wx.stopPullDownRefresh()
  },

  onReachBottom () {
    this.more()
  },

  onShareAppMessage () {
    return {
      title: 'HackerNews 热点',
    }
  },

  methods: {
    tapType (event) {
      let channel = event.currentTarget.dataset.channel
      if (channel === this.data.channel) {
        return
      }
      this.reload({ channel })
    },

    tapItemTitle (event) {
      let item = event.currentTarget.dataset.item
      if (!item.url) {
        return this.$router.navigate(`/pages/item?id=${item.id}`)
      }
      this.$router.navigate(`/pages/article?id=${item.id}`)
    },

    tapItemBy (event) {
      let item = event.currentTarget.dataset.item
      this.$router.navigate(`/pages/user?id=${item.by}`)
    },

    tapItemComments (event) {
      let item = event.currentTarget.dataset.item
      this.$router.navigate(`/pages/item?id=${item.id}`)
    },

    tapMore (event) {
      this.more()
    },

    reload ({ channel }) {
      if (this.data.isReloading) {
        return
      }
      this.setData({ isReloading: true })
      return this.fetchListData({ channel })
        .finally(this.$loading())
        .then(() => this.setData({ isReloading: false }))
    },

    more () {
      if (this.data.isLoadingMore) {
        return
      }
      this.setData({ isLoadingMore: true })
      this.fetchNextPage()
        .finally(this.$loading())
        .then(() => this.setData({ isLoadingMore: false }))
    }
  },
}))
</script>

<style lang="less">
.view {
  background-color: #ff6600;
}
.header {
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  right: 0;
  display: flex;
  background-color: #ff6600;
  justify-content: space-around;
  align-items: center;
  color: rgba(255,255,255,0.5);
  height: 36px;
  line-height: 36px;
  font-size: 12px;
  .link {
    padding: 0 1em;
    &.active {
      color:  #fff;
      font-weight: bold;
      box-shadow: 0 -2px 0 0 #fff inset;
    }
    &.ad {
      padding: 0;
      button {
        margin: 0;
        padding: 0 1em;
        height: 36px;
        display: flex;
        align-items: center;
        background-color: transparent;
        border: none;
        image {
          display: block;
          width: 12px;
          height: 12px;
        }
      }
    }
  }
}

.news-list {
  padding-top: 36px;
  .item {
    display: block;
    background-color: #fff;
    &:nth-child(2n+1) {
      background-color: #fafafa;
    }
  }
  .more {
    font-size: 12px;
    height: 96px;
    line-height: 96px;
    text-align: center;
    color: #999;
    background-color: #fafafa;
  }
}

.view.is-reloading {
  .header {
    color: rgba(255,255,255,0.25);
    .link.active {
      color: rgba(255,255,255,0.5);
    }
  }
}
</style>
